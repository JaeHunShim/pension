<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.mapper.ChatMapper">
	<!-- 채팅방 개설할때 db에 들어갈 것들 -->
	<insert id = "createRoom">
	insert into CHATROOM (USER_user_id , TUTOR_USER_user_id, CLASS_class_id) 
	values(#{USER_user_id}, #{TUTOR_USER_user_id} , #{CLASS_class_id} )
	
	</insert>
	
	<!-- 채팅방 정보 -->
	<select id ="isRoom" resultType = "ChatRoomVO">
	select * from CHATROOM WHERE USER_user_id = #{USER_user_id} and TUTOR_USER_user_id = #{TUTOR_USER_user_id} 
	and CLASS_class_id = #{CLASS_class_id} 
	</select>
	
	<!-- 메세지 입력한것이 db에 저장되는 부분  -->
	<insert id = "insertMessage">
	insert into MESSAGE (message_sender , message_receiver, message_content, 
	CHATROOM_chatroom_id, USER_user_id , TUTOR_USER_user_id, CLASS_class_id)
	values (#{message_sender}, #{message_receiver}, #{message_content} , #{CHATROOM_chatroom_id} , #{USER_user_id},
	#{TUTOR_USER_user_id} , #{CLASS_class_id})
	</insert>
	<!-- 채팅한 상대방 정보 -->
	<select id = "getPartner" resultType = "MessageVO">
	SELECT USER_user_id from MESSAGE where TUTOR_USER_user_id = #{TUTOR_USER_user_id} and CLASS_class_id = #{CLASS_class_id}
	</select>
	<!-- 유저이미지 가지고오는 부분 -->
	<select id = "getProfile" resultType = "String">
	select user_profileImagePath from USER WHERE user_id = #{user_id}
	</select>
	<!--  유저이름 뽑아오는 부분  -->
	<select id = "getName" resultType = "String">
	select user_name from USER where user_id = #{user_id}
	</select>
	<!--  보낸 메세지들에 대한 정보  -->
	<select id = "getMessageList" resultType = "MessageVO">
	select m.* , user_name, user_profileImagePath from MESSAGE m left outer join USER u on m.message_sender = u.user_id where CHATROOM_chatroom_id = #{CHATROOM_chatroom_id}
	
	</select>
	<!-- 해당 사용자가가 속해있는 방에 대한 정보 가지고 오기  -->
	<select id = "getRoomList" resultType = "ChatRoomVO">
	select * from CHATROOM where USER_user_id = #{USER_user_id}
	</select>
	<!-- 교수가 이었던 방에 대한 정보 -->
	<select id = "getRoomList2" resultType = "ChatRoomVO">
	select * from CHATROOM where TUTOR_USER_user_id = #{TUTOR_USER_user_id}
	</select>
	<!-- 최근 정보 가지고 오기  -->
	<select id = "getRecentMessage" resultType = "MessageVO">
	
	select m.* , class_name, class_id , TUTOR_tutor_id from MESSAGE m left outer join CLASS c on m.CLASS_class_id = c.class_id 
	where CHATROOM_chatroom_id = #{CHATROOM_chatroom_id} order by message_id desc limit 1;
	</select>
	
	<!-- 선생아이디 가지고 오기  -->
	<select id = "getTutorId" resultType = "String">
	select tutor_id from TUTOR where USER_user_id = #{USER_user_id}
	</select>
	<!-- 시간업데이트 하는 부분 -->
	<update id ="updateReadTime">
	update MESSAGE set message_readTime = NOW() where TUTOR_USER_user_id = #{TUTOR_USER_user_id} AND CLASS_class_id = #{CLASS_class_id} AND message_readTime = message_sendTime and message_sender = TUTOR_USER_user_id and USER_user_id = #{USER_user_id};
	</update>
	<!-- 교수시간 업데이트 하는 부분 -->
	<update id ="updateReadTimeTutor">
	update MESSAGE set message_readTime = NOW() where TUTOR_USER_user_id = #{TUTOR_USER_user_id} AND CLASS_class_id = #{CLASS_class_id} AND message_readTime = message_sendTime and message_sender = USER_user_id and USER_user_id = #{USER_user_id};
	
	</update>
	
	<!-- 조건에 맞는 게시물 카운트 -->
	<select id = "getUnReadCount" resultType = "int">
	
	select count(*) from MESSAGE where USER_user_id = #{USER_user_id} and TUTOR_USER_user_id = #{TUTOR_USER_user_id} AND CLASS_class_id = #{CLASS_class_id} AND message_readTime = message_sendTime and message_sender = TUTOR_USER_user_id;
	<!--  -->
	</select>
	<select id = "getUnReadCountTutor" resultType = "int">
	
	select count(*) from MESSAGE where TUTOR_USER_user_id =#{TUTOR_USER_user_id} and CLASS_class_id = #{CLASS_class_id} AND message_readTime = message_sendTime and message_sender = USER_user_id and USER_user_id = #{USER_user_id};
	
	</select>
	<!-- 모든조건의 대화 가지고오기  -->
	<select id = "getAllCount" resultType = "int">
	select count(*) from MESSAGE WHERE (TUTOR_USER_user_id = #{TUTOR_USER_user_id} and message_readTime = message_sendTime and message_sender != #{USER_user_id}) or (USER_user_id = #{USER_user_id} and message_readTime = message_sendTime and message_sender != #{USER_user_id}); 
	
	</select>
</mapper>